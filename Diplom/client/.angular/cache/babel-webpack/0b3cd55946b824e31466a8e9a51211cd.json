{"ast":null,"code":"import { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let authService = /*#__PURE__*/(() => {\n  class authService {\n    constructor(http) {\n      this.http = http;\n      this.token = \"\";\n      this.con = true;\n    }\n\n    login(user) {\n      return this.http.post('/api/auth/login', user).pipe(tap(({\n        token,\n        us\n      }) => {\n        localStorage.setItem('authToken', token);\n        this.setToken(token);\n        this.setCurrentUser(us);\n      }));\n    }\n\n    registrate(login, password, f_name, s_name, img) {\n      const fd = new FormData();\n      fd.append('login', login);\n      fd.append('password', password);\n      fd.append('f_name', f_name);\n      fd.append('s_name', s_name);\n\n      if (img) {\n        fd.append('image', img, img.name);\n      }\n\n      console.log(fd);\n      return this.http.post('/api/auth/register', fd).pipe(tap(({\n        token,\n        us\n      }) => {\n        localStorage.setItem('authToken', token);\n        this.setToken(token);\n        this.setCurrentUser(us);\n      }));\n    }\n\n    setCurrentUser(user) {\n      this.currentUser = user;\n    }\n\n    setCurrentUserByToken(tkn) {\n      //console.log(\"<--- \"+fid.get('token')+\" --->\");\n      return this.http.post('/api/auth/getByToken', {\n        token: tkn\n      }).pipe(tap(({\n        us\n      }) => {\n        this.setCurrentUser(us);\n      })); //console.log(this.currentUser);\n    }\n\n    getCurrentUser() {\n      if (this.isAuthtenticated() && this.con && this.currentUser == undefined) {\n        this.con = false;\n        this.setCurrentUserByToken(this.token).subscribe(() => {\n          console.log('success');\n        }, error => {\n          console.warn(error);\n        });\n      }\n\n      return this.currentUser ? this.currentUser : null;\n    }\n\n    setToken(token) {\n      this.token = token;\n      console.log(\"-->> \" + token);\n    }\n\n    getToken() {\n      return this.token;\n    }\n\n    isAuthtenticated() {\n      if (this.token != '') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    logout() {\n      this.setToken('');\n      localStorage.clear();\n      this.currentUser = undefined;\n    }\n\n  }\n\n  authService.ɵfac = function authService_Factory(t) {\n    return new (t || authService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  authService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: authService,\n    factory: authService.ɵfac,\n    providedIn: 'root'\n  });\n  return authService;\n})();","map":null,"metadata":{},"sourceType":"module"}